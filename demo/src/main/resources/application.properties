spring.profiles.active=local
spring.application.name=demo
server.port=8868

project.version=@project.version@

access.domain=http://127.0.0.1:8868

spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.time-zone=GMT+8


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?&characterEncoding=utf-8&useSSL=false&rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai
spring.datasource.jdbc-url=jdbc:mysql://127.0.0.1:3306/test?&characterEncoding=utf-8&useSSL=false&rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.default-auto-commit=true
spring.datasource.auto-commit=true
spring.datasource.maximum-pool-size=10
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.test-on-borrow=false
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=18800
spring.datasource.validation-query=SELECT 1


spring.datasource.read.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.read.url=jdbc:mysql://127.0.0.1:3306/test_bak?&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.read.username=root
spring.datasource.read.password=123456
spring.datasource.read.maximum-pool-size=10

spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=


#spring.redis.password=
#spring.redis.cluster.nodes=127.0.0.1:6379,127.0.0.1:6379,127.0.0.1:6379,127.0.0.1:6379,127.0.0.1:6379,127.0.0.1:6379
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=1000ms
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0


spring.redis.timeout=2000

spring.redis.l3.database=1
spring.redis.l3.host=127.0.0.1
spring.redis.l3.port=6379
spring.redis.l3.password=

#x7.cache.l3.expire-time=12000ms

spring.cache.redis.time-to-live.seconds=60


http.connect-timeout=200000
http.socket-timeout=15000

x7.reyc.fallback.remote-exception=RemoteServiceException

# �۶ϴ򿪵�ʱ�� 60S, ��Ҫ�ĵ������õ�����: xxxxxx
# resilience4j.circuitbreaker.configs.xxxxxx.waitDurationInOpenState=60000
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=60000
resilience4j.circuitbreaker.configs.default.ring-buffer-size-in-closed-state=100
resilience4j.circuitbreaker.configs.default.ring-buffer-size-in-half-open-state=10
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.event-consumer-buffer-size=100

resilience4j.ratelimiter.instances.boo.base-config=default
resilience4j.ratelimiter.configs.default.limit-for-period=10
resilience4j.ratelimiter.configs.default.limit-refresh-period=1s
resilience4j.ratelimiter.configs.default.timeout-duration=5000
resilience4j.ratelimiter.configs.default.eventConsumerBufferSize=100



circuitbreaker.l2cache.name=l2cache
resilience4j.circuitbreaker.configs.l2cache.wait-duration-in-open-state=60000
resilience4j.circuitbreaker.configs.l2cache.ring-buffer-size-in-closed-state=100
resilience4j.circuitbreaker.configs.l2cache.ring-buffer-size-in-half-open-state=10
resilience4j.circuitbreaker.configs.l2cache.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.l2cache.event-consumer-buffer-size=100
resilience4j.circuitbreaker.configs.l2cache.sliding-window-size=10
resilience4j.circuitbreaker.configs.l2cache.minimum-number-of-calls=3
resilience4j.circuitbreaker.configs.l2cache.slow-call-duration-threshold=6000ms
resilience4j.circuitbreaker.configs.l2cache.slow-call-rate-threshold=50


endpoints.health.mapping.DOWN=OK
endpoints.health.mapping.OUT_OF_SERVICE=OK

tracing.zipkin.url=http://127.0.0.1:9411

opentracing.jaeger.enabled=true
opentracing.jaeger.udp-sender.host=127.0.0.1
opentracing.jaeger.udp-sender.port=6831
opentracing.spring.web.client.enabled=true

web.demo=127.0.0.1:8868
# when write/read db, sharding db can't support more TPS
# we set the k8s namespace: prod_0, prod_1, prod_2 ....
# k8s ingress to front service(no connection to DB), front service call service-demo
# by the way, one set of services' TPS is 10000, deploy 10 sets, TPS become almost 100000
#web.demo=web-demo.prod#key#

seata.applicationId=demo
seata.txServiceGroup=demo-service-provider


#logging.level.org.springframework.jdbc=DEBUG
logging.level.x7=DEBUG
logging.file.name=e:/logs/x7/demo.log
logging.file.path=e:/logs/x7
logging.pattern.file=%X{traceId} -%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.pattern.console=${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}

web.test=web-test.prod#dog#



##### sharding-shpere demo #####
# ����Ҫע�����е�����Դ, ע��: , ��������пո�
spring.shardingsphere.datasource.names=ds0, ds1

# ��������Դ0������
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/test?&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://127.0.0.1:3306/test_1?&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

# �ֿ����
# �ֿ������user_id
#spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=io.xream.x7.config.CatPreciseShardingAlgorithm

# Ĭ������Դ�����漰�ֱ�ı��ʹ���������Դ
spring.shardingsphere.sharding.default-data-source-name=ds0

spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=user_id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=user_id
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE

x7.repository.show-sql=true
spring.shardingsphere.props.sql.show=true

# �ֱ����
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{id % 2}
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

spring.shardingsphere.sharding.binding-tables=t_order, t_order_item

# ����shardingsphere�ķֿ�ֱ��͵���shardingsphere�Ķ�д����
#spring.shardingsphere.masterslave.name=ds0_ds0
#spring.shardingsphere.masterslave.master-data-source-name=ds0
#spring.shardingsphere.masterslave.slave-data-source-names=ds0



#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
#    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
#    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\
#    org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
